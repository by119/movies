import { Component, ViewChild } from '@angular/core';
import { IonicPage, NavController, NavParams, InfiniteScroll, Content } from 'ionic-angular';
import { CommonProvider } from "../../providers/common/common";
/**
 * Generated class for the ArtistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@IonicPage({ name: 'artist' })
@Component({
  selector: 'page-artist',
  templateUrl: 'artist.html',
})
export class ArtistPage {
  @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll;
  @ViewChild(Content) content: Content;
  tabs: any = "0"; items = [[], []]; page = [0, 0];
  res = [];
  params: any = {};
  infiniteScrollState = [!0, !0];
  size = 10;
  filter = !1;
  artistList = [{ avatar: '../../assets/imgs/avatar.png', name: '西蒙', type: '1', vip: 2 }, { avatar: '../../assets/imgs/notice2.png', name: '西蒙', type: '2', vip: 2 }, { avatar: '../../assets/imgs/organ1.png', name: '西蒙', type: '3', vip: 2 }, { avatar: '../../assets/imgs/notice1.png', name: '西蒙', type: '4', vip: 2 }, { avatar: '../../assets/imgs/organ2.png', name: '哈哈', type: '5演员' }, { avatar: '../../assets/imgs/organ1.png', name: '西蒙', type: '6演员', vip: 2 }, { avatar: '../../assets/imgs/avatar.png', name: '西蒙', type: '7演员', vip: 2 }, { avatar: '../../assets/imgs/organ1.png', name: '西蒙', type: '8学生', vip: 2 }, { avatar: '../../assets/imgs/organ2.png', name: '哈哈', type: '9演员' }];
  // filterList = [{title:'性别',pro:[{text:'男',pro_id:1},{text:'女',pro_id:0}]},{title:'类型',pro:[{text:'影视演员',pro_id:2},{text:'歌手',pro_id:3},{text:'模特',pro_id:4},{text:'网红',pro_id:5},{text:'儿童',pro_id:6},{text:'体育',pro_id:7},{text:'曲艺',pro_id:8},{text:'舞蹈演员',pro_id:9}]},{title:'年龄',pro:[{text:'15岁以下',pro_id:10},{text:'15-20',pro_id:11},{text:'21-25',pro_id:12}]},{title:'性别',pro:[{text:'男',pro_id:1},{text:'女',pro_id:0}]},{title:'类型',pro:[{text:'影视演员',pro_id:2},{text:'歌手',pro_id:3},{text:'模特',pro_id:4},{text:'网红',pro_id:5},{text:'儿童',pro_id:6},{text:'体育',pro_id:7},{text:'曲艺',pro_id:8},{text:'舞蹈演员',pro_id:9}]},{title:'年龄',pro:[{text:'15岁以下',pro_id:10},{text:'15-20',pro_id:11},{text:'21-25',pro_id:12}]},{title:'性别',pro:[{text:'男',pro_id:1},{text:'女',pro_id:0}]},{title:'类型',pro:[{text:'影视演员',pro_id:2},{text:'歌手',pro_id:3},{text:'模特',pro_id:4},{text:'网红',pro_id:5},{text:'儿童',pro_id:6},{text:'体育',pro_id:7},{text:'曲艺',pro_id:8},{text:'舞蹈演员',pro_id:9}]},{title:'年龄',pro:[{text:'15岁以下',pro_id:10},{text:'15-20',pro_id:11},{text:'21-25',pro_id:12}]}];
  filterList = [{ title: '年龄', pro: [{ text: '15岁以下', pro_id: 10 }, { text: '15-20', pro_id: 11 }, { text: '21-25', pro_id: 12 }] }, { title: '性别', pro: [{ text: '男', pro_id: 1 }, { text: '女', pro_id: 0 }] }, { title: '类型', pro: [{ text: '影视演员', pro_id: 2 }, { text: '歌手', pro_id: 3 }, { text: '模特', pro_id: 4 }, { text: '网红', pro_id: 5 }, { text: '儿童', pro_id: 6 }, { text: '体育', pro_id: 7 }, { text: '曲艺', pro_id: 8 }, { text: '舞蹈演员', pro_id: 9 }] }, { title: '年龄', pro: [{ text: '15岁以下', pro_id: 10 }, { text: '15-20', pro_id: 11 }, { text: '21-25', pro_id: 12 }] }];

  proIndex = [];

  constructor(public navCtrl: NavController, public navParams: NavParams, public cp: CommonProvider) {
  }

  ionViewDidLoad() {
    this.page[this.tabs] == 0 && this.doInfinite();
  }

  // 确定筛选
  confirm() {
    this.filter = !1;
  }
  // 取消筛选
  close() {
    this.filter = !1;
  }
  // 打开筛选
  filterShow() {
    this.filter = !0;
  }
  // 选择筛选属性
  choosePro(i, j) {
    this.proIndex[i] = j;
    console.log('i:', i, '----j:', j, 'index:', this.proIndex);
  }

  changeSeg() {
    if (this.tabs == 1) {
      this.filter = !0;
    } else {
      this.filter = !1;
    }
    0 == this.page[this.tabs] && this.doInfinite();
    this.infiniteScroll.enable(this.infiniteScrollState[this.tabs]);
    if(this.items[this.tabs].length>0) {
      setTimeout(() => { this.cp.getNode(); },100)
    }
  }
  doInfinite() {
    this.params = {
      p: ++this.page[this.tabs],
      size: this.size
    }
    this.cp.getData("user_profile/getlist", this.params).then((e: any) => {
      if (e.data.length > 0) {
        this.res[this.tabs] = e;
        this.items[this.tabs] = this.items[this.tabs].concat(this.res[this.tabs].data);
        this.infiniteScroll.complete();
        if(this.items[this.tabs].length>0) {
          setTimeout(() => { this.cp.getNode(); },100)
        }
      } else {
        this.infiniteScrollState[this.tabs] = !1;
        this.infiniteScroll.enable(this.infiniteScrollState[this.tabs]);
      }
    })
  }
}
